Object.defineProperty(exports, '__esModule', { value: true });
exports.deleteCatalogId =
  exports.putCatalogId =
  exports.getCatalogId =
  exports.postCatalog =
  exports.getCatalog =
  exports.patchInvoices =
  exports.getInvoices =
  exports.postStockReceive =
  exports.patchStock =
  exports.putStock =
  exports.getStock =
  exports.patchBillsInvoicesIdTitle =
  exports.getBillsInvoicesOwnerId =
  exports.getBillsUsersUserId =
  exports.getBillsCostCostId =
  exports.getBillsBillIdPdf =
  exports.postBillsBillIdPay =
  exports.getBillsBillId =
  exports.postBills =
  exports.getBills =
  exports.deleteUsersId =
  exports.putUsersId =
  exports.postUsers =
  exports.getUsers =
  exports.postAuthSignin =
    void 0;
/**
 * Generated by orval v7.8.0 🍺
 * Do not edit manually.
 * Ollio API
 * API documentation for the Ollio POS mobile app
 * OpenAPI spec version: 1.0.0
 */
const axiostance_1 = require('./axiostance');
/**
 * @summary User Authentication
 */
const postAuthSignin = authRequest => {
  return (0, axiostance_1.axiosInstance)({
    url: `/auth/signin`,
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    data: authRequest,
  });
};
exports.postAuthSignin = postAuthSignin;
/**
 * @summary Get users by role
 */
const getUsers = params => {
  return (0, axiostance_1.axiosInstance)({ url: `/users`, method: 'GET', params });
};
exports.getUsers = getUsers;
/**
 * @summary Create Retailer as Customer
 */
const postUsers = createUser => {
  return (0, axiostance_1.axiosInstance)({
    url: `/users`,
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    data: createUser,
  });
};
exports.postUsers = postUsers;
/**
 * @summary Update User
 */
const putUsersId = (id, updateUser) => {
  return (0, axiostance_1.axiosInstance)({
    url: `/users/${id}`,
    method: 'PUT',
    headers: { 'Content-Type': 'application/json' },
    data: updateUser,
  });
};
exports.putUsersId = putUsersId;
/**
 * @summary Delete User
 */
const deleteUsersId = id => {
  return (0, axiostance_1.axiosInstance)({ url: `/users/${id}`, method: 'DELETE' });
};
exports.deleteUsersId = deleteUsersId;
/**
 * @summary Get all bills
 */
const getBills = params => {
  return (0, axiostance_1.axiosInstance)({ url: `/bills`, method: 'GET', params });
};
exports.getBills = getBills;
/**
 * @summary Create a new bill
 */
const postBills = billCreate => {
  return (0, axiostance_1.axiosInstance)({
    url: `/bills`,
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    data: billCreate,
  });
};
exports.postBills = postBills;
/**
 * @summary Get a bill by ID
 */
const getBillsBillId = billId => {
  return (0, axiostance_1.axiosInstance)({ url: `/bills/${billId}`, method: 'GET' });
};
exports.getBillsBillId = getBillsBillId;
/**
 * @summary Pay a bill by ID
 */
const postBillsBillIdPay = (billId, postBillsBillIdPayBody) => {
  return (0, axiostance_1.axiosInstance)({
    url: `/bills/${billId}/pay`,
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    data: postBillsBillIdPayBody,
  });
};
exports.postBillsBillIdPay = postBillsBillIdPay;
/**
 * @summary Generate a PDF for a bill by ID
 */
const getBillsBillIdPdf = billId => {
  return (0, axiostance_1.axiosInstance)({ url: `/bills/${billId}/pdf`, method: 'GET', responseType: 'blob' });
};
exports.getBillsBillIdPdf = getBillsBillIdPdf;
/**
 * @summary Get cost details by ID
 */
const getBillsCostCostId = costId => {
  return (0, axiostance_1.axiosInstance)({ url: `/bills/cost/${costId}`, method: 'GET' });
};
exports.getBillsCostCostId = getBillsCostCostId;
/**
 * @summary Get all bills for a specific user
 */
const getBillsUsersUserId = userId => {
  return (0, axiostance_1.axiosInstance)({ url: `/bills/users/${userId}`, method: 'GET' });
};
exports.getBillsUsersUserId = getBillsUsersUserId;
/**
 * @summary Get all invoices for a specific owner
 */
const getBillsInvoicesOwnerId = ownerId => {
  return (0, axiostance_1.axiosInstance)({ url: `/bills/invoices/${ownerId}`, method: 'GET' });
};
exports.getBillsInvoicesOwnerId = getBillsInvoicesOwnerId;
/**
 * @summary Update the title of an invoice
 */
const patchBillsInvoicesIdTitle = (id, invoiceTitleUpdate) => {
  return (0, axiostance_1.axiosInstance)({
    url: `/bills/invoices/${id}/title`,
    method: 'PATCH',
    headers: { 'Content-Type': 'application/json' },
    data: invoiceTitleUpdate,
  });
};
exports.patchBillsInvoicesIdTitle = patchBillsInvoicesIdTitle;
/**
 * @summary Get user stock
 */
const getStock = () => {
  return (0, axiostance_1.axiosInstance)({ url: `/stock`, method: 'GET' });
};
exports.getStock = getStock;
/**
 * @summary Set stock availability
 */
const putStock = stockAvailability => {
  return (0, axiostance_1.axiosInstance)({
    url: `/stock`,
    method: 'PUT',
    headers: { 'Content-Type': 'application/json' },
    data: stockAvailability,
  });
};
exports.putStock = putStock;
/**
 * @summary Update stock price
 */
const patchStock = stockPriceUpdate => {
  return (0, axiostance_1.axiosInstance)({
    url: `/stock`,
    method: 'PATCH',
    headers: { 'Content-Type': 'application/json' },
    data: stockPriceUpdate,
  });
};
exports.patchStock = patchStock;
/**
 * @summary Receive stock
 */
const postStockReceive = stockReceive => {
  return (0, axiostance_1.axiosInstance)({
    url: `/stock/receive`,
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    data: stockReceive,
  });
};
exports.postStockReceive = postStockReceive;
/**
 * @summary Get invoices
 */
const getInvoices = () => {
  return (0, axiostance_1.axiosInstance)({ url: `/invoices`, method: 'GET' });
};
exports.getInvoices = getInvoices;
/**
 * @summary Update invoice title
 */
const patchInvoices = patchInvoicesBody => {
  return (0, axiostance_1.axiosInstance)({
    url: `/invoices`,
    method: 'PATCH',
    headers: { 'Content-Type': 'application/json' },
    data: patchInvoicesBody,
  });
};
exports.patchInvoices = patchInvoices;
/**
 * @summary Get a list of catalog items
 */
const getCatalog = () => {
  return (0, axiostance_1.axiosInstance)({ url: `/catalog`, method: 'GET' });
};
exports.getCatalog = getCatalog;
/**
 * @summary Create a new catalog item
 */
const postCatalog = catalogItemCreate => {
  return (0, axiostance_1.axiosInstance)({
    url: `/catalog`,
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    data: catalogItemCreate,
  });
};
exports.postCatalog = postCatalog;
/**
 * @summary Get a catalog item by ID
 */
const getCatalogId = id => {
  return (0, axiostance_1.axiosInstance)({ url: `/catalog/${id}`, method: 'GET' });
};
exports.getCatalogId = getCatalogId;
/**
 * @summary Update a catalog item by ID
 */
const putCatalogId = (id, catalogItemUpdate) => {
  return (0, axiostance_1.axiosInstance)({
    url: `/catalog/${id}`,
    method: 'PUT',
    headers: { 'Content-Type': 'application/json' },
    data: catalogItemUpdate,
  });
};
exports.putCatalogId = putCatalogId;
/**
 * @summary Delete a catalog item by ID
 */
const deleteCatalogId = id => {
  return (0, axiostance_1.axiosInstance)({ url: `/catalog/${id}`, method: 'DELETE' });
};
exports.deleteCatalogId = deleteCatalogId;
